#!/bin/bash

run-detached() {
  nohup "$@" >/dev/null 2>&1 & disown
}
alias rdetach='run-detached'

alias godot='flatpak run org.godotengine.Godot'
alias browsh='sudo docker run -it browsh/browsh'
alias cura='/opt/cura/Cura.AppImage'
alias etcher='/opt/balenaEtcher/balenaEtcher.AppImage'
alias aseprite='rdetach /opt/aseprite/aseprite.AppImage'
alias arduino='rdetach /opt/arduino-ide/arduino-ide.AppImage'
alias ac='alacritty'
alias fuck='thefuck'
alias fk='thefuck'
alias tmux-kill='tmux kill-server'
alias nano='nano --rcfile ~/.config/.nanorc'
alias ponysay='ponysay 2>/dev/null'
alias pony='ponysay --ponyonly'
alias fastfetch='echo && fastfetch'
alias lg='lazygit'

# lunarvim
lvim_open() {
  if command -v nvr >/dev/null 2>&1 && [[ -n "$NVIM_LISTEN_ADDRESS" ]]; then
    nvr -s --nostart --remote-tab "$@" || lvim "$@"
  else
    lvim "$@"
  fi
}

alias nvim='/opt/nvim-linux64/bin/nvim'
alias nv='neovide'
alias lvim='lvim'
alias lv='lvim_open'
alias neovide='/opt/neovide/neovide.AppImage --neovim-bin $(which lvim)'
alias ovim='lvim'
alias ov='lv'

# test.sh
test_sh() {
  if [ -d ~/test.sh ] && [ -f ~/test.sh/test.sh ]; then
    bash ~/test.sh/test.sh "$@"
  else
    git clone https://github.com/zahradnik-ondrej/test.sh.git ~/test.sh
    bash ~/test.sh/test.sh "$@"
  fi
}

alias testsh='test_sh'

# bash
if command -v bat &> /dev/null; then
    alias cat='bat -n'
fi

if command -v eza &> /dev/null; then
  alias ls='eza -l --icons --git --no-user --no-time --color=auto --icons=auto'
else
  alias ls='ls -l --color=auto'
fi

alias saymyname='whoami'

alias lsa='ls -a'
alias diff='diff --color=auto'
alias cls='clear'
alias grep='grep -I --color=auto'
alias egrep='egrep -I --color=auto'
alias dir='vdir'
alias vdir='ls'

# dotfiles
alias dots='/usr/bin/git --git-dir=$HOME/.dotfiles --work-tree=$HOME'
alias dots-private='/usr/bin/git --git-dir=$HOME/.dotfiles-private --work-tree=$HOME'

# git
alias git-fpd='git fetch --prune && git branch -vv | grep ": gone]" | awk "{print \$1}" | xargs git branch -D'
alias git-add100='find . -type f -size -100M -print0 | xargs -0 git add'

# fit
alias g++='g++ -std=c++20 -Wall -pedantic -Wno-long-long'

# prusa
alias usbsdmux='/usr/bin/usbsdmux'
alias ctrl='(cwd=$(pwd) && cd /home/ondra/prusa/meta-sl1-hw-tests/ && python3 tools/control.py && cd "$cwd")'

vnc() {
  ssh root@$1 "touch-ui -platform vnc &"
  tigervnc $1:5900 -geometry 800x500
}

# todo
print_todo() {
  local file="$1"

  declare -A TAG_COLORS=(
    [#HACK]="1;37;40"
    [#PERF]="1;37;40"
    [#NOTE]="1;30;47"
    [#INFO]="1;30;47"
    [#LEGACY]="1;30;47"
    [#DOCS]="1;30;47"
    [#IDEA]="1;30;46"
    [#CLEANUP]="1;30;46"
    [#REFACTOR]="1;30;46"
    [#OPTIMIZE]="1;30;46"
    [#REVIEW]="1;30;46"
    [#TEST]="1;30;46"
    [#TODO]="1;30;46"
    [#TESTED]="1;30;42"
    [#FIXED]="1;30;42"
    [#DONE]="1;30;42"
    [#TODO_LOW]="1;30;43"
    [#TEST_LOW]="1;30;43"
    [#WARN]="1;30;45"
    [#TODO_MID]="1;30;45"
    [#TEST_MID]="1;30;45"
    [#WIP]="1;30;45"
    [#TEMP]="1;30;45"
    [#DEPRECATED]="1;30;45"
    [#CRITICAL]="1;30;41"
    [#TODO_HIGH]="1;30;41"
    [#TEST_HIGH]="1;30;41"
    [#SECURITY]="1;30;41"
    [#FIX]="1;30;41"
    [#BUG]="1;30;41"
  )

  [[ -f "$file" ]] || return 0

  if [[ -s "$file" ]]; then
    if command -v figlet >/dev/null 2>&1; then
      figlet -f slant "To - Do :"
    else
      banner="
 _____               ____  
|_   _|__           |  _ \  ___    _ 
  | |/ _ \   _____  | | | |/ _ \  (_)
  | | (_) | |_____| | |_| | (_) |  _ 
  |_|\___/          |____/ \___/  (_)"
      echo "$banner"
      echo
    fi
    printf "\e[0m"
  fi

  local sorted_tags=($(for tag in "${!TAG_COLORS[@]}"; do echo "$tag"; done | awk '{ print length, $0 }' | sort -rn | cut -d' ' -f2-))

  while IFS= read -r line; do
    matched=false
    for tag in "${sorted_tags[@]}"; do
      [[ "$line" == *"$tag"* ]] || continue
      color="${TAG_COLORS[$tag]}"
      fg="${color#*;}"
      fg="${fg%%;*}"
      bg="${color##*;}"
      [[ "$bg" == 40 ]] && text_fg="$fg" || text_fg=$(( bg - 10 ))
      start="${line%%$tag*}"
      rest="${line#*$tag}"
      printf "%s\e[%sm\e[1m%s\e[0m \e[%sm%s\e[0m\n" "$start" "$color" "$tag" "$text_fg" "$rest"
      matched=true
      break
    done
    $matched || printf "%s\n" "$line"
  done < "$file"
}

alias todo="print_todo $HOME/.todo.md"
alias td='todo'
